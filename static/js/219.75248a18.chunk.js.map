{"version":3,"file":"static/js/219.75248a18.chunk.js","mappings":"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","sources":["components/Loader/Loader.js","components/MoviesList/MoviesList.styled.jsx","components/MoviesList/MoviesList.js","hooks/useFetchMovieDetails.js","hooks/useFetchSearchMovies.js","hooks/useFetchMovieCast.js","hooks/useFetchMovieReviews.js","hooks/useFetchPopular.js","components/SearchForm/SearchForm.styled.jsx","components/SearchForm/SearchForm.js","pages/Movies.js","services/api.js"],"sourcesContent":["import React from 'react';\nimport { Circles } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <div style={{ zIndex: '1000', position: 'fixed', left: '45%', top: '44%' }}>\n      <Circles\n        height=\"160\"\n        width=\"160\"\n        color=\"#4fa94d\"\n        ariaLabel=\"circles-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\n\nexport default Loader;\n","import styled from \"@emotion/styled\";\n\n\nexport const List = styled.ul`\npadding: 15px;\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\ngap: 15px;\nlist-style: none;\n`;\n\n\nexport const ListItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const Title = styled.h1`\ncolor: #111;\ntext-align: center;\nwidth: 250px;\nheight: 35px;\nfont-size: 15px;\nfont-weight: 700;\ntext-transform: uppercase;\nmargin: 0 0 5px 0;\n`;","import { Link, useLocation } from 'react-router-dom';\nimport { List, Title, ListItem } from './MoviesList.styled';\n\nconst MoviesList = ({ movies }) => {\n  const defaultImg = `https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700`;\n  const location = useLocation();\n\n  return (\n    <List>\n      {movies.length > 0 ? (\n        movies.map(movieData => (\n          <ListItem key={movieData.id}>\n            <Link to={`/movies/${movieData.id}`} state={{ from: location }}>\n              <Title>{movieData.title}</Title>\n              <img\n                src={\n                  movieData.poster_path\n                    ? [\n                        `https://image.tmdb.org/t/p/w500${movieData.poster_path}`,\n                      ]\n                    : defaultImg\n                }\n                alt={movieData.title}\n                width={250}\n              />\n            </Link>\n          </ListItem>\n        ))\n      ) : (\n        <li>Sorry, not found film</li>\n      )}\n    </List>\n  );\n};\n\nexport default MoviesList;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { movieDetails } from 'services/api';\n\nexport const useFetchMovieDetails = () => {\n  const { movieId } = useParams();\n  const [movies, setMovie] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchDetails = async () => {\n      if (!movieId) return;\n      try {\n        setLoading(true);\n        const data = await movieDetails(movieId);\n        setMovie(data);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchDetails();\n  }, [movieId]);\n\n  return { movies, loading, error };\n};\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { searchFilms } from 'services/api';\n\nexport const useFetchSearchMovies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [search, setSearch] = useState(null);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const query = searchParams.get('query') ?? '';\n\n  const handleSubmit = value => {\n    setSearchParams({ query: value });\n  };\n\n  useEffect(() => {\n    const fetchSearch = async () => {\n      if (!query) return;\n      try {\n        setLoading(true);\n        const data = await searchFilms(query);\n        setSearch(data.results);\n      } catch {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSearch();\n  }, [query]);\n  return { search, error, loading, handleSubmit };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesCredits } from 'services/api';\n\nexport const useFetchMovieCast = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [cast, setCast] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      if (!movieId) return;\n      try {\n        setLoading(true);\n        const data = await moviesCredits(movieId);\n        setCast(data.cast);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return { error, loading, cast };\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { moviesReviews } from 'services/api';\n\nexport const useFetchMovieReviews = () => {\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [reviews, setReviews] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    const fetchCast = async () => {\n      if (!movieId) return;\n      try {\n        setLoading(true);\n        const data = await moviesReviews(movieId);\n        setReviews(data.results);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCast();\n  }, [movieId]);\n  return { error, loading, reviews };\n};\n","import { useEffect, useState } from 'react';\nimport { fetchTrending } from 'services/api';\n\nexport const useFetchPopular = () => {\n  const [movies, setMovies] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const fetchTrend = async () => {\n      try {\n        setLoading(true);\n        const response = await fetchTrending();\n        setMovies(response.results);\n      } catch (error) {\n        setError('something wrong(');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchTrend();\n  }, []);\n\n  return { movies, error, loading };\n};\n","import styled from \"@emotion/styled\";\n\n\nexport const SearchFormStyled = styled.form`\n  padding: 20px;\n`;\n\n\nexport const StyledInput = styled.input`\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;   \n`;\n\n\nexport const StyledButton = styled.button`\n  background-color: #7E8FDD;\n  color: white;\n  padding: 10px;\n  margin-top: 10px;\n  border: none;\n  border-radius: 5px;\n  margin-right: 5px;\n  cursor: pointer;\n`;\n","import { useState } from 'react';\nimport {\n  SearchFormStyled,\n  StyledButton,\n  StyledInput,\n} from './SearchForm.styled';\n\nexport const SearchForm = ({ onSearch }) => {\n  const [query, setQuery] = useState('');\n\n  const handleInput = event => {\n    setQuery(event.currentTarget.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    onSearch(query);\n    setQuery('');\n  };\n\n  return (\n    <SearchFormStyled onClick={handleSubmit}>\n      <StyledButton type=\"submit\">\n        <span>Search</span>\n      </StyledButton>\n\n      <StyledInput\n        type=\"text\"\n        autoComplete=\"off\"\n        autoFocus\n        placeholder=\"Search movies\"\n        value={query}\n        onChange={handleInput}\n      />\n    </SearchFormStyled>\n  );\n};\n","// import { useSearchParams } from 'react';\nimport Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { SearchForm } from 'components/SearchForm/SearchForm';\nimport { useFetchSearchMovies } from 'hooks';\n\nconst Movies = () => {\n  const { search, error, loading, handleSubmit } = useFetchSearchMovies();\n\n  return (\n    <div>\n      <SearchForm onSearch={handleSubmit} />\n      {loading && <Loader />}\n      {error && <p>❌ Something went wrong - {error}</p>}\n      {search && <MoviesList movies={search} />}\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '4eede4a470802f6f0ed7ee55539b1602';\n\nexport const fetchTrending = async () => {\n  return (await axios.get(`trending/movie/day?api_key=${API_KEY}`)).data;\n};\n\nexport const searchFilms = async query => {\n  return (\n    await axios.get(\n      `search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n    )\n  ).data;\n};\n\nexport const movieDetails = async id => {\n  return (await axios.get(`movie/${id}?api_key=${API_KEY}`)).data;\n};\n\nexport const moviesCredits = async id => {\n  return (await axios.get(`movie/${id}/credits?api_key=${API_KEY}`)).data;\n};\n\nexport const moviesReviews = async id => {\n  return (await axios.get(`movie/${id}/reviews?api_key=${API_KEY}`)).data;\n};\n"],"names":["_jsx","style","zIndex","position","left","top","children","Circles","height","width","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","styled","_templateObject","_taggedTemplateLiteral","ListItem","_templateObject2","Title","_templateObject3","_ref","movies","location","useLocation","length","map","movieData","_jsxs","Link","to","concat","id","state","from","title","src","poster_path","alt","useFetchMovieDetails","movieId","useParams","_useState","useState","_useState2","_slicedToArray","setMovie","_useState3","_useState4","loading","setLoading","_useState5","_useState6","error","setError","useEffect","fetchDetails","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","movieDetails","sent","t0","finish","stop","apply","arguments","useFetchSearchMovies","_searchParams$get","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","search","setSearch","query","get","fetchSearch","searchFilms","results","handleSubmit","value","useFetchMovieCast","cast","setCast","fetchCast","moviesCredits","useFetchMovieReviews","reviews","setReviews","moviesReviews","useFetchPopular","setMovies","fetchTrend","response","fetchTrending","SearchFormStyled","StyledInput","StyledButton","SearchForm","onSearch","setQuery","onClick","event","preventDefault","type","autoComplete","autoFocus","placeholder","onChange","currentTarget","_useFetchSearchMovies","Loader","MoviesList","axios","API_KEY","_ref2","_callee2","_context2","_x","_ref3","_callee3","_context3","_x2","_ref4","_callee4","_context4","_x3","_ref5","_callee5","_context5","_x4"],"sourceRoot":""}